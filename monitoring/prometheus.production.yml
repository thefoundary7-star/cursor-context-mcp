# Prometheus configuration for MCP SaaS Platform Production
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'mcp-saas-production'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "rules/*.yml"

# Scrape configuration
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 5s
    metrics_path: /metrics

  # Node exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 5s

  # MCP SaaS API
  - job_name: 'mcp-api'
    static_configs:
      - targets: ['api:3001']
    scrape_interval: 10s
    metrics_path: /metrics
    scrape_timeout: 5s

  # MCP SaaS Frontend
  - job_name: 'mcp-frontend'
    static_configs:
      - targets: ['frontend:3000']
    scrape_interval: 10s
    metrics_path: /metrics
    scrape_timeout: 5s

  # PostgreSQL exporter
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 10s

  # Redis exporter
  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 10s

  # Nginx exporter
  - job_name: 'nginx-exporter'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 10s

  # Grafana
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 30s
    metrics_path: /metrics

  # Docker daemon
  - job_name: 'docker'
    static_configs:
      - targets: ['docker:9323']
    scrape_interval: 10s

  # Blackbox exporter for external monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://your-domain.com/api/health
        - https://api.your-domain.com/api/health
        - https://staging.your-domain.com/api/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Service discovery for Kubernetes (if using K8s)
  # - job_name: 'kubernetes-pods'
  #   kubernetes_sd_configs:
  #     - role: pod
  #   relabel_configs:
  #     - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
  #       action: keep
  #       regex: true
  #     - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
  #       action: replace
  #       target_label: __metrics_path__
  #       regex: (.+)
  #     - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
  #       action: replace
  #       regex: ([^:]+)(?::\d+)?;(\d+)
  #       replacement: $1:$2
  #       target_label: __address__
  #     - action: labelmap
  #       regex: __meta_kubernetes_pod_label_(.+)
  #     - source_labels: [__meta_kubernetes_namespace]
  #       action: replace
  #       target_label: kubernetes_namespace
  #     - source_labels: [__meta_kubernetes_pod_name]
  #       action: replace
  #       target_label: kubernetes_pod_name

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB

# Remote write configuration (for long-term storage)
# remote_write:
#   - url: https://your-prometheus-remote-write-endpoint/api/v1/write
#     basic_auth:
#       username: your-username
#       password: your-password

# Remote read configuration
# remote_read:
#   - url: https://your-prometheus-remote-read-endpoint/api/v1/read
#     basic_auth:
#       username: your-username
#       password: your-password
