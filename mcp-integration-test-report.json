{
  "timestamp": "2025-09-19T12:22:01.771Z",
  "summary": {
    "total": 26,
    "passed": 22,
    "failed": 4,
    "passRate": 84.6
  },
  "details": [
    {
      "testName": "Root Endpoint",
      "status": "PASS",
      "details": "Status: 200"
    },
    {
      "testName": "Basic Health Check",
      "status": "PASS",
      "details": "Status: 200"
    },
    {
      "testName": "Readiness Check",
      "status": "PASS",
      "details": "Status: 200"
    },
    {
      "testName": "Detailed Health Check",
      "status": "FAIL",
      "details": "Error: {\"success\":false,\"error\":\"Endpoint not found\",\"message\":\"The endpoint GET /api/health/detailed was not found\"}"
    },
    {
      "testName": "CORS for http://localhost:3000",
      "status": "PASS",
      "details": "CORS headers present"
    },
    {
      "testName": "CORS for http://localhost:3001",
      "status": "PASS",
      "details": "CORS headers present"
    },
    {
      "testName": "CORS for https://yourdomain.com",
      "status": "FAIL",
      "details": "CORS headers missing"
    },
    {
      "testName": "User Login",
      "status": "PASS",
      "details": "Status: 200"
    },
    {
      "testName": "Auth Token Retrieved",
      "status": "PASS",
      "details": "Token stored for API tests"
    },
    {
      "testName": "Invalid Login Rejection",
      "status": "PASS",
      "details": "Properly rejects invalid credentials"
    },
    {
      "testName": "Valid License Validation",
      "status": "PASS",
      "details": "Status: 200"
    },
    {
      "testName": "Invalid License Rejection",
      "status": "PASS",
      "details": "Properly rejects invalid license"
    },
    {
      "testName": "Analytics Tracking with API Key",
      "status": "PASS",
      "details": "Status: 200"
    },
    {
      "testName": "Analytics Tracking without API Key",
      "status": "PASS",
      "details": "Properly requires API key"
    },
    {
      "testName": "Get User Profile",
      "status": "PASS",
      "details": "Status: 200"
    },
    {
      "testName": "Get User Licenses",
      "status": "PASS",
      "details": "Status: 200"
    },
    {
      "testName": "Get User Dashboard",
      "status": "FAIL",
      "details": "Error: {\"success\":false,\"error\":\"Endpoint not found\",\"message\":\"The endpoint GET /api/user/dashboard was not found\"}"
    },
    {
      "testName": "Rate Limiting",
      "status": "PASS",
      "details": "10/10 requests successful"
    },
    {
      "testName": "Rate Limit Enforcement",
      "status": "PASS",
      "details": "No rate limiting detected (within limits)"
    },
    {
      "testName": "404 Error Handling",
      "status": "PASS",
      "details": "Properly returns 404 for non-existent endpoints"
    },
    {
      "testName": "Malformed JSON Handling",
      "status": "FAIL",
      "details": "Unexpected error: Request failed with status code 500"
    },
    {
      "testName": "Unauthorized Access Handling",
      "status": "PASS",
      "details": "Properly requires authentication"
    },
    {
      "testName": "Security Headers",
      "status": "PASS",
      "details": "4/4 security headers present"
    },
    {
      "testName": "MCP Workflow - License Validation",
      "status": "PASS",
      "details": "Status: 200"
    },
    {
      "testName": "MCP Workflow - Analytics Tracking",
      "status": "PASS",
      "details": "Status: 200"
    },
    {
      "testName": "MCP Integration Readiness",
      "status": "PASS",
      "details": "Complete MCP workflow successful"
    }
  ],
  "errors": [
    "Detailed Health Check: Error: {\"success\":false,\"error\":\"Endpoint not found\",\"message\":\"The endpoint GET /api/health/detailed was not found\"}",
    "CORS for https://yourdomain.com: CORS headers missing",
    "Get User Dashboard: Error: {\"success\":false,\"error\":\"Endpoint not found\",\"message\":\"The endpoint GET /api/user/dashboard was not found\"}",
    "Malformed JSON Handling: Unexpected error: Request failed with status code 500"
  ],
  "credentials": {
    "hasAuthToken": true,
    "hasCredentials": true
  },
  "recommendations": [
    "CORS configuration needs to be updated"
  ]
}